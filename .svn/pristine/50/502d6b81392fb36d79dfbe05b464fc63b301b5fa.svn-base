package cn.ucai.callnum.view;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import cn.ucai.callnum.net.CallNumNet;
import cn.ucai.dto.RequestAction;
import cn.ucai.dto.RequestMsg;
import cn.ucai.dto.ResponseMsg;
import cn.ucai.entity.Ticket;
import cn.ucai.server.dao.TicketDao;
import cn.ucai.server.dao.Impl.TicketDaoImpl;
import cn.ucai.taketicket.net.TakeTicketNet;
import cn.ucai.util.ClockThread;
import cn.ucai.util.CloseWindowAdapter;
import cn.ucai.util.SoundUtil;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JButton;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.awt.event.ActionEvent;

public class AJiaoHao_GUI extends JFrame {

	private JPanel contentPane;
	private Integer WindowNum;
	private String user;
	private int Id;
	private int count = 0;
	private JButton btnNewButton_3;//办理成功
	private JButton btnNewButton_4 ;//办理失败
	private  static int i=0;
	
	
	public String getUser() {
		return user;
	}

	public void setUser(String user) {
		this.user = user;
	}

	public int getId() {
		return Id;
	}

	public void setId(int Id) {
		this.Id = Id;
	}

	public int getWindowNum() {
		return WindowNum;
	}

	public void setWindowNum(int windowNum) {
		this.WindowNum = windowNum;
	}

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					
					AJiaoHao_GUI frame = new AJiaoHao_GUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});

	}

	/**
	 * Create the frame.
	 */

	public AJiaoHao_GUI() {
		setResizable(false);
		setTitle("");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(700, 200, 450, 483);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		JLabel lblNewLabel = new JLabel("业务人员操作界面");
		lblNewLabel.setBounds(0, 0, 110, 30);
		contentPane.add(lblNewLabel);
		this.addWindowListener(new CloseWindowAdapter());

		JButton btnNewButton = new JButton("重复叫号");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				// 向服务端发起请求
				RequestMsg requestMsg = new RequestMsg();
				requestMsg.setAction(RequestAction.CALL_RECALL);
				Map<String, Object> data = new HashMap<String, Object>();
				data.put("id", Id);
				requestMsg.setData(data);
				CallNumNet.getInstanse().SendMsg(requestMsg);
				// 接收返回的数据

				ResponseMsg responseMsg = CallNumNet.getInstanse().reciverMsg();
				Ticket ticket = (Ticket) responseMsg.getData();
				if (null == ticket) {

					JOptionPane.showMessageDialog(btnNewButton, "请先叫号！");
				} else {
					ticket.getB_code();
					int number = Integer.valueOf(ticket.getNumber());
					SoundUtil sd = new SoundUtil();
					sd.callNum(ticket.getB_code(), number, WindowNum);
					count++;
					if (count % 2 == 0) {
						btnNewButton.setEnabled(false);
					} else {
						btnNewButton.setEnabled(true);
					}

					//System.out.println(count);
				}
			}
		});
		btnNewButton.setFont(new Font("宋体", Font.BOLD, 18));
		btnNewButton.setBounds(90, 46, 110, 50);
		contentPane.add(btnNewButton);

		JButton btnNewButton_1 = new JButton("下一个号");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				// 向服务端发起请求

				RequestMsg requestMsg = new RequestMsg();
				requestMsg.setAction(RequestAction.CALL_CALLNUM);
				Map<String, Object> data = new HashMap<String, Object>();
				data.put("no", WindowNum);
				data.put("username", user);
				requestMsg.setData(data);
				CallNumNet.getInstanse().SendMsg(requestMsg);

				// 接收返回的数据
				ResponseMsg responseMsg = CallNumNet.getInstanse().reciverMsg();
				// 使用数据
				Ticket ticket = (Ticket) responseMsg.getData();
				if (null == ticket) {
					JOptionPane.showMessageDialog(btnNewButton_1, "当前无人办理业务！");
				} else {
					SoundUtil sd = new SoundUtil();
					int number = Integer.valueOf(ticket.getNumber());
					sd.callNum(ticket.getB_code(), number, WindowNum);
					Id = ticket.getId();
					btnNewButton.setEnabled(true);
					btnNewButton_3.setEnabled(true);
					btnNewButton_4.setEnabled(true);
				}
			}
		});
		btnNewButton_1.setFont(new Font("宋体", Font.BOLD, 18));
		btnNewButton_1.setBounds(90, 129, 110, 50);
		contentPane.add(btnNewButton_1);

		JButton btnNewButton_2 =new JButton("暂停服务");

		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				i++;
				if(i%2!=0){
					btnNewButton_2.setText("恢复服务");
					btnNewButton.setEnabled(false);
					btnNewButton_1.setEnabled(false);
					btnNewButton_3.setEnabled(false);
					btnNewButton_4.setEnabled(false);
					
				}
				if(i%2==0){
					btnNewButton_2.setText("暂停服务");
					btnNewButton.setEnabled(true);
					btnNewButton_1.setEnabled(true);
					btnNewButton_3.setEnabled(true);
					btnNewButton_4.setEnabled(true);
				}
				 
			}
		});
		btnNewButton_2.setFont(new Font("宋体", Font.BOLD, 18));
		btnNewButton_2.setBounds(90, 207, 110, 50);
		contentPane.add(btnNewButton_2);

		 btnNewButton_3 = new JButton("办理成功");
		btnNewButton_3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				// 向服务端发送请求
				RequestMsg requestMsg = new RequestMsg();
				requestMsg.setAction(RequestAction.CALL_DISPOSE_SUCCESS);
				Map<String, Object> data = new HashMap<String, Object>();
				data.put("id", Id);
				requestMsg.setData(data);
				CallNumNet.getInstanse().SendMsg(requestMsg);

				// 接收响应的数据
				ResponseMsg responseMsg = CallNumNet.getInstanse().reciverMsg();
				Ticket ticket = (Ticket) responseMsg.getData();
				if (null == ticket) {
					JOptionPane.showMessageDialog(btnNewButton_3, "当前无办理业务！");
				} else {
					JOptionPane.showMessageDialog(btnNewButton_3, "办理成功！");
					btnNewButton.setEnabled(false);
					btnNewButton_4.setEnabled(false);
				}
			}
		});
		btnNewButton_3.setFont(new Font("宋体", Font.BOLD, 18));
		btnNewButton_3.setBounds(90, 293, 110, 50);
		contentPane.add(btnNewButton_3);

		 btnNewButton_4 = new JButton("办理失败");
		btnNewButton_4.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				// //向服务端发送数据
				 RequestMsg requestMsg=new RequestMsg();
				 requestMsg.setAction(RequestAction.CALL_DISPOSE_FAIL);
				 Map<String, Object> data=new HashMap<String ,Object>();
				 data.put("id", Id);
				 requestMsg.setData(data);
				 CallNumNet.getInstanse().SendMsg(requestMsg);
				
				 //接收响应的数据
				 ResponseMsg responseMsg=CallNumNet.getInstanse().reciverMsg();
				 Ticket ticket=(Ticket) responseMsg.getData();
				 if(null==ticket){
					 JOptionPane.showMessageDialog(btnNewButton_4, "当前无办理业务！");
				 }else{
					 BanLi_ShiBai_GUI bs=new BanLi_ShiBai_GUI();
					 bs.setVisible(true);
					 btnNewButton.setEnabled(false);
					 btnNewButton_3.setEnabled(false);
				 }
			}
		});
		btnNewButton_4.setFont(new Font("宋体", Font.BOLD, 18));
		btnNewButton_4.setBounds(90, 368, 110, 50);
		contentPane.add(btnNewButton_4);

		JLabel lblNewLabel_3 = new JLabel("");
		lblNewLabel_3.setFont(new Font("宋体", Font.BOLD, 12));
		lblNewLabel_3.setBounds(196, 404, 222, 41);
		contentPane.add(lblNewLabel_3);
		ClockThread clockThread = new ClockThread(lblNewLabel_3);
		clockThread.setPriority(10);
		clockThread.start();
		
	}

}
